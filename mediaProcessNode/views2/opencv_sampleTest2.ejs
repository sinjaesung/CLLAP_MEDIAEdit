<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>

        #canvasOutput{
            background-color:#808080
        }
        #imagesrc{
            outline:1px solid black; width:400px;height:400px;display:block;
        }
    </style>
</head>
<body>
<h2>HELLO OEPNCV.JS</h2>
<p id='status'>OPENCV IS JIS LOADING....</p>
<div>
    <p>Inputoutput</p>
    <button id='start' onclick="javascript:init_cv()">START</button>
    <div class='inputoutput'>
        <video id='video' width=320 height=240 alt='no image' src='resource/resource1.mp4' controls></video>
        <video id='video2' width=320 height=240 alt='no image' src='resource/resource2.mp4' controls></video>  
        <img id='logosource' width=200 height=150 src='public/sourceimg/test5.jpg'/>
    </div>
    <div class='inputoutput'>
        <div class='caption'>canvasinput</div>
        <canvas id='canvasinput1'></canvas>
        <canvas id='canvasinput2'></canvas>
        <canvas id='canvasinput3'></canvas>
    </div>
    <div class='inputoutput'>
        <div class='caption'>canvasOutput</div>
        <canvas id='canvasOutput' width=320 height=240></canvas>
        <canvas id='canvasOutput2' width=320 height=240></canvas>
        <canvas id='canvasOutput3' width=320 height=240></canvas>

        <canvas id='canvasOutput4'></canvas>
        <canvas id='canvasOutput5'></canvas>
        <canvas id='canvasOutput6'></canvas>
        <canvas id='canvasOutput7'></canvas>
        <canvas id='canvasOutput8'></canvas>
        <canvas id='canvasOutput9'></canvas>
    </div>
</div>
<script>
let imgElement = document.getElementById('imagesrc');
let inputElement=document.getElementById('fileInput');
let video=document.getElementById('video');
let video2=document.getElementById('video2');

let canvasinput1=document.getElementById('canvasinput1');
let canvasinput2=document.getElementById('canvasinput2');
let context1=canvasinput1.getContext('2d');
let canvasoutput = document.getElementById('canvasOutput');
let canvasoutput2 = document.getElementById('canvasOutput2');
let canvasoutput3 = document.getElementById('canvasOutput3');
let canvasoutput4 = document.getElementById('canvasOutput4');
let canvasoutput5 = document.getElementById('canvasOutput5');
let canvasoutput6 = document.getElementById('canvasOutput6');
let canvasoutput7 = document.getElementById('canvasOutput7');
let canvasoutput8 = document.getElementById('canvasOutput8');
let canvasoutput9 = document.getElementById('canvasOutput9');

let src;
let src2;
let logo_src=document.getElementById('logosource');
let dst;
let cap;
let cap2;
function init_cv(){
    
    src=new cv.Mat(video.height,video.width,cv.CV_8UC4);
    src2=new cv.Mat(video2.height,video2.width,cv.CV_8UC4);//a는없는.
    logo_src=cv.imread(logo_src)
    dst=new cv.Mat(video.height,video.width,cv.CV_8UC1);
    cap=new cv.VideoCapture(video);
    cap2=new cv.VideoCapture(video2);

    cap.read(src);
    cap2.read(src2);

    cv.imshow("canvasinput1",src);
    cv.imshow("canvasinput2",src2);
    cv.imshow("canvasinput3",logo_src);

    console.log('logosrcsss:',logo_src);
    console.log('srcss:',src);
    console.log('dstss:',dst);
    console.log('capsss:',cap);

    //matrix test
    let mattzero=cv.Mat.zeros(5,5,cv.CV_8UC1);
    let mattones = cv.Mat.ones(5,5,cv.CV_8UC4);
    let matteyes = cv.Mat.eye(5,5,cv.CV_8UC4);
    let matt_arrays= cv.matFromArray(2,2,cv.CV_8UC1,[1,2,3,4]);

    let imgDatass=context1.getImageData(0,0,canvasinput1.width,canvasinput2.height);
    let mat_images=cv.matFromImageData(imgDatass);

    console.log('mattzero:',mattzero);
    console.log('mattones:',mattones);
    console.log('matteyess::',matteyes);
    console.log('matt_arrayss:',matt_arrays);

    console.log('imgDaatss:',imgDatass);
    console.log('mat_imagess:',mat_images);

    //processVideo();

    //lean serveral aritmem operstitson on images like additon ,subtraction,bitwise operatison etc..
    //you can add two images by opencv fucntion,cv.add() res=img1+img2 both images sholud be of same depth and type..
    //image added a + b
    let src1_local=cv.imread(canvasinput1);
    let src2_local=cv.imread(canvasinput2);
    let dst_local=new cv.Mat();
    let mask = new cv.Mat();
    let dtype=-1;
    cv.add(src1_local,src2_local, dst_local, mask, dtype);

    console.log('dst_localss::',src1_local,src2_local,dst_local);
    cv.imshow(canvasoutput,dst_local);

    //image subtract a - b
    let dst_local_subtract=new cv.Mat();
    cv.subtract(src1_local,src2_local,dst_local_subtract,mask,dtype);
    console.log('dst locaslsss:',src1_local,src2_local,dst_local_subtract);
    cv.imshow(canvasoutput2,dst_local_subtract);
    
    //image2 roi and maksing and bitwise operationss>>
    let srcss= cv.imread(canvasinput1);
    let logo = cv.imread(canvasinput3);
    let dsti = new cv.Mat();
    let rois= new cv.Mat();
    let masks=new cv.Mat();
    let masklnv = new cv.Mat();
    let imgbg=new cv.Mat();
    let imgfg=new cv.Mat();
    let sum=new cv.Mat();
    let rect=new cv.Rect(0,0,logo.cols,logo.rows);

    //i want to put logo on top -lef corner so i create a roi
    rois = srcss.roi(rect);

    //create a mask of logo and craete its inverse mark also
    cv.cvtColor(logo, masks, cv.COLOR_RGBA2GRAY, 0);
    cv.threshold(masks,masks,100,255,cv.THRESH_BINARY);
    cv.bitwise_not(masks,masklnv);

    //black-out the area of logo in roi
    cv.bitwise_and(rois,rois, imgbg,masklnv);

    //take onlay regoion of log ofrom logo image
    cv.bitwise_and(logo,logo,imgfg,masks);

    //put logo in roi and modify the main image
    cv.add(imgbg,imgfg,sum);

    dsti = srcss.clone();
    for(let i=0; i<logo.rows;i++){
        for(let j=0; j<logo.cols; j++){

            //dsti.ucharPtr(i,j)[0] = sum.ucharPtr(i,j)[0];
            dsti.ucharPtr(i,j)[1] = sum.ucharPtr(i,j)[1];
            dsti.ucharPtr(i,j)[2] = sum.ucharPtr(i,j)[2];
            //dsti.ucharPtr(i,j)[1] = sum.ucharPtr(i,j)[3];
        }
    }
    console.log('logo',logo);
    console.log('rois',rois);
    console.log('maskss:',masks);
    console.log('masklnv:',masklnv);
    console.log('imgbg,fg:',imgbg,imgfg);
    console.log('sum,rect:',sum);
    cv.imshow(canvasoutput3,dsti);

    cv.imshow(canvasoutput4,rois);
    cv.imshow(canvasoutput5,masks);
    cv.imshow(canvasoutput6,masklnv);
    cv.imshow(canvasoutput7,imgbg);
    cv.imshow(canvasoutput8,imgfg);
    cv.imshow(canvasoutput9,sum);
    //src.delte();dst.delete();logo.delete();roi.delete();mask.dleet();masklnv.delet();imgbg.delte();imgfg.delete();sum.delete()

    //some data structuress
    let point = new cv.Point(10,10);
    let point_= {x:10,y:10};

    let scalar = new cv.Scalar(20,20,240,200);
    let scalar_=[20,20,240,200];

    let size=new cv.Size(200,240);
    let size_={width:200,height:240};

    let circle=new cv.Circle(point,40);
    let circle_={center:point, radius:40};

    let rects=new cv.Rect(10,10,500,500);
    let rects_={x:10,y:10,width:200,height:215};

    let rotatedRect=new cv.RotatedRect(point,size,40);
    let rotatedRect_={center:point, size:size, angle:40};

    let vertices=cv.RotatedRect.points(rotatedRect);
    console.log('verticesss:',vertices);
    let boundingRect=cv.RotatedRect.boundingRect(rotatedRect);
    console.log('boundingRectss:',boundingRect);

}
const FPS=30;
function processVideo(){
    try{
        let begin= Date.now();
        cap.read(src);
        //cv.cvtColor(src,dst,cv.COLOR_RGBA2GRAY);
        cv.imshow('canvasinput1',src);

        console.log('processing videoss:');
        console.log('capss::',cap);
        console.log('dst::',dst);
        console.log('srcss:',src);

        let delay=1000/FPS - (Date.now() - begin);
        console.log('delayss:',delay);

        setTimeout(processVideo,1000)
    }catch(error){
        console.log('errosss:',error);
    }
    
}

imgElement.onload = function() {
    console.log('imgElement자원요소가 모두 로드되었을시에::',cv);
    //let mat = cv.imread(imgElement);
    //cv.imshow('canvasOutput',mat);
    //console.log('imgshow mat elemtnssnso datasss:',mat);
    //mat.delete();
};
function onOpenCvReady(){
    document.getElementById('status').innerHTML ='OPENCV,.JS IS REaday';

    init_cv();
    //$('#start').click(init_cv);

}
</script>
<script async src='https://docs.opencv.org/3.4.0/opencv.js' onload='onOpenCvReady()'></script>
</body>
</html>