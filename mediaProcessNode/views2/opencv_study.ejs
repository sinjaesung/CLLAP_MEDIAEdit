<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .display_none{
            display:none;
        }
        canvas{
            background-color:#808080
        }
        #imagesrc{
            outline:1px solid black; width:400px;height:400px;display:block;
        }

        .OUTPUT{
            width:100%;height:auto;border:1px solid blue;
        }
    </style>
    <script src="/public/jquery.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>
    <script src='/public/ffmpegwasm.js'></script>
</head>
<body>
<h2>HELLO OEPNCV.JS</h2>
<p id='status'>OPENCV IS JIS LOADING....</p>
<div>
    <button id='start'>START</button>
    <button id='test_extract'>트랜지션처리(PROCESS)</button>
    <!--일련 작업 처리의 시작>>올린 영상들의 끝시작부분 각각 집합 이미지분할처리셋팅-->
    <form action='/testsss' id='image_extract_form'method='post'>
        <input type='hidden' name='upload_video_list' id='image_extract_form_data'/>
    </form>

    <img src='/processbefore/jcaS63LCWXEOkDopTluN_between1_blend_transitionImg_between1_9.png' id='test'/>
    <img src='/tmp/cCgPpD4kE1EY5mLLos6Nresource2_startside-1.png' id='test2'/>
    <p>video upload(1~5take select videos)</p>
    <form action='/upload_ver2' method='post' id='video_uploadform' onSubmit="javascript:return video_upload(event);">
        <input type='file' name='onetake' value='onetake'/>
        <input type='file' name='twotake' value='twotake'/>
        <input type='file' name='threetake' value='threetake'/>
        <input type='file' name='fourtake' value='fourtake'/>
        <input type='file' name='fivetake' value='fivetake'/>

        <input type='submit' value='업로드&인코딩'/>
    </form>

    <div class='inputoutput'>
        <video id='upload_video0' width=640 height=360 alt='no image' src='' controls></video>
        <video id='upload_video1' width=640 height=360 alt='no image' src='' controls></video>
        <video id='upload_video2' width=640 height=360 alt='no image' src='' controls></video>
        <video id='upload_video3' width=640 height=360 alt='no image' src='' controls></video>
        <video id='upload_video4' width=640 height=360 alt='no image' src='' controls></video>
    </div>
    <div class='OUTPUT'>
        <video id='output_video_element' width=640 height=360 alt='no image' src='' controls></video>
    </div>

    <div class='inputoutput'>
        <div class='caption'>canvasinput</div>
        <canvas id='canvasinput1'></canvas>
        <canvas id='canvasinput2'></canvas>

        <!--canvas img data areass display:none-->
        <canvas id='canvasinput1-1' ></canvas>
        <canvas id='canvasinput1-2'></canvas>
        <canvas id='canvasinput1-3'></canvas>
        <canvas id='canvasinput1-4'></canvas>
        <canvas id='canvasinput1-5'></canvas>
        <canvas id='canvasinput1-6'class=''></canvas>
        <canvas id='canvasinput1-7'class=''></canvas>
        <canvas id='canvasinput1-8'class=''></canvas>
        <canvas id='canvasinput1-9'class=''></canvas>
        <canvas id='canvasinput1-10'class=''></canvas>
        <canvas id='canvasinput1-11'class=''></canvas>
        <canvas id='canvasinput1-12'class=''></canvas>
        <canvas id='canvasinput1-13'class=''></canvas>
        <canvas id='canvasinput1-14'class=''></canvas>
        <canvas id='canvasinput1-15'class=''></canvas>
        <canvas id='canvasinput1-16'class=''></canvas>
        <canvas id='canvasinput1-17'class=''></canvas>
        <canvas id='canvasinput1-18'class=''></canvas>
        <canvas id='canvasinput1-19'class=''></canvas>
        <canvas id='canvasinput1-20'class=''></canvas>
        <canvas id='canvasinput1-21'class=''></canvas>
        <canvas id='canvasinput1-22'class=''></canvas>
        <canvas id='canvasinput1-23'class=''></canvas>
        <canvas id='canvasinput1-24'class=''></canvas>
        <canvas id='canvasinput1-25'class=''></canvas>
        <canvas id='canvasinput1-26'class=''></canvas>
        <canvas id='canvasinput1-27'class=''></canvas>
        <canvas id='canvasinput1-28'class=''></canvas>
        <canvas id='canvasinput1-29'class=''></canvas>
        <canvas id='canvasinput1-30'class=''></canvas>
        <canvas id='canvasinput1-31'class='display_none'></canvas>
        <canvas id='canvasinput1-32'class='display_none'></canvas>
        <canvas id='canvasinput1-33'class='display_none'></canvas>
        <canvas id='canvasinput1-34'class='display_none'></canvas>
        <canvas id='canvasinput1-35'class='display_none'></canvas>
        <canvas id='canvasinput1-36'class='display_none'></canvas>
        <canvas id='canvasinput1-37'class='display_none'></canvas>
        <canvas id='canvasinput1-38'class='display_none'></canvas>
        <canvas id='canvasinput1-39'class='display_none'></canvas>
        <canvas id='canvasinput1-40'class='display_none'></canvas>
        <canvas id='canvasinput1-41'class='display_none'></canvas>
        <canvas id='canvasinput1-42'class='display_none'></canvas>
        <canvas id='canvasinput1-43'class='display_none'></canvas>
        <canvas id='canvasinput1-44'class='display_none'></canvas>
        <canvas id='canvasinput1-45'class='display_none'></canvas>
        <canvas id='canvasinput1-46'class='display_none'></canvas>
        <canvas id='canvasinput1-47'class='display_none'></canvas>
        <canvas id='canvasinput1-48'class='display_none'></canvas>
        <canvas id='canvasinput1-49'class='display_none'></canvas>
        <canvas id='canvasinput1-50'class='display_none'></canvas>
        <canvas id='canvasinput1-51'class='display_none'></canvas>
        <canvas id='canvasinput1-52'class='display_none'></canvas>
        <canvas id='canvasinput1-53'class='display_none'></canvas>
        <canvas id='canvasinput1-54'class='display_none'></canvas>
        <canvas id='canvasinput1-55'class='display_none'></canvas>
        <canvas id='canvasinput1-56'class='display_none'></canvas>
        <canvas id='canvasinput1-57'class='display_none'></canvas>
        <canvas id='canvasinput1-58'class='display_none'></canvas>
        <canvas id='canvasinput1-59'class='display_none'></canvas>
        <canvas id='canvasinput1-60'class='display_none'></canvas>


        <canvas id='canvasinput1-61'class='display_none'></canvas>
        <canvas id='canvasinput1-62'class='display_none'></canvas>
        <canvas id='canvasinput1-63'class='display_none'></canvas>
        <canvas id='canvasinput1-64'class='display_none'></canvas>
        <canvas id='canvasinput1-65'class='display_none'></canvas>
        <canvas id='canvasinput1-66'class='display_none'></canvas>
        <canvas id='canvasinput1-67'class='display_none'></canvas>
        <canvas id='canvasinput1-68'class='display_none'></canvas>
        <canvas id='canvasinput1-69'class='display_none'></canvas>
        <canvas id='canvasinput1-70'class='display_none'></canvas>
        <canvas id='canvasinput1-71'class='display_none'></canvas>
        <canvas id='canvasinput1-72'class='display_none'></canvas>
        <canvas id='canvasinput1-73'class='display_none'></canvas>
        <canvas id='canvasinput1-74'class='display_none'></canvas>
        <canvas id='canvasinput1-75'class='display_none'></canvas>
        <canvas id='canvasinput1-76'class='display_none'></canvas>
        <canvas id='canvasinput1-77'class='display_none'></canvas>
        <canvas id='canvasinput1-78'class='display_none'></canvas>
        <canvas id='canvasinput1-79'class='display_none'></canvas>
        <canvas id='canvasinput1-80'class='display_none'></canvas>
        <canvas id='canvasinput1-81'class='display_none'></canvas>
        <canvas id='canvasinput1-82'class='display_none'></canvas>
        <canvas id='canvasinput1-83'class='display_none'></canvas>
        <canvas id='canvasinput1-84'class='display_none'></canvas>
        <canvas id='canvasinput1-85'class='display_none'></canvas>
        <canvas id='canvasinput1-86'class='display_none'></canvas>
        <canvas id='canvasinput1-87'class='display_none'></canvas>
        <canvas id='canvasinput1-88'class='display_none'></canvas>
        <canvas id='canvasinput1-89'class='display_none'></canvas>
        <canvas id='canvasinput1-90'class='display_none'></canvas>
        <canvas id='canvasinput1-91'class='display_none'></canvas>
        <canvas id='canvasinput1-92'class='display_none'></canvas>
        <canvas id='canvasinput1-93'class='display_none'></canvas>
        <canvas id='canvasinput1-94'class='display_none'></canvas>
        <canvas id='canvasinput1-95'class='display_none'></canvas>
        <canvas id='canvasinput1-96'class='display_none'></canvas>
        <canvas id='canvasinput1-97'class='display_none'></canvas>
        <canvas id='canvasinput1-98'class='display_none'></canvas>
        <canvas id='canvasinput1-99'class='display_none'></canvas>
        <canvas id='canvasinput1-100'class='display_none'></canvas>
        <canvas id='canvasinput1-101'class='display_none'></canvas>
        <canvas id='canvasinput1-102'class='display_none'></canvas>
        <canvas id='canvasinput1-103'class='display_none'></canvas>
        <canvas id='canvasinput1-104'class='display_none'></canvas>
        <canvas id='canvasinput1-105'class='display_none'></canvas>
        <canvas id='canvasinput1-106'class='display_none'></canvas>
        <canvas id='canvasinput1-107'class='display_none'></canvas>
        <canvas id='canvasinput1-108'class='display_none'></canvas>
        <canvas id='canvasinput1-109'class='display_none'></canvas>
        <canvas id='canvasinput1-110'class='display_none'></canvas>
        <canvas id='canvasinput1-111'class='display_none'></canvas>
        <canvas id='canvasinput1-112'class='display_none'></canvas>
        <canvas id='canvasinput1-113'class='display_none'></canvas>
        <canvas id='canvasinput1-114'class='display_none'></canvas>
        <canvas id='canvasinput1-115'class='display_none'></canvas>
        <canvas id='canvasinput1-116'class='display_none'></canvas>
        <canvas id='canvasinput1-117'class='display_none'></canvas>
        <canvas id='canvasinput1-118'class='display_none'></canvas>
        <canvas id='canvasinput1-119'class='display_none'></canvas>
        <canvas id='canvasinput1-120'class='display_none'></canvas>

        <canvas id='canvasinput1-121'class='display_none'></canvas>
        <canvas id='canvasinput1-122'class='display_none'></canvas>
        <canvas id='canvasinput1-123'class='display_none'></canvas>
        <canvas id='canvasinput1-124'class='display_none'></canvas>
        <canvas id='canvasinput1-125'class='display_none'></canvas>
        <canvas id='canvasinput1-126'class='display_none'></canvas>
        <canvas id='canvasinput1-127'class='display_none'></canvas>
        <canvas id='canvasinput1-128'class='display_none'></canvas>
        <canvas id='canvasinput1-129'class='display_none'></canvas>
        <canvas id='canvasinput1-130'class='display_none'></canvas>
        <canvas id='canvasinput1-131'class='display_none'></canvas>
        <canvas id='canvasinput1-132'class='display_none'></canvas>
        <canvas id='canvasinput1-133'class='display_none'></canvas>
        <canvas id='canvasinput1-134'class='display_none'></canvas>
        <canvas id='canvasinput1-135'class='display_none'></canvas>
        <canvas id='canvasinput1-136'class='display_none'></canvas>
        <canvas id='canvasinput1-137'class='display_none'></canvas>
        <canvas id='canvasinput1-138'class='display_none'></canvas>
        <canvas id='canvasinput1-139'class='display_none'></canvas>
        <canvas id='canvasinput1-140'class='display_none'></canvas>
        <canvas id='canvasinput1-141'class='display_none'></canvas>
        <canvas id='canvasinput1-142'class='display_none'></canvas>
        <canvas id='canvasinput1-143'class='display_none'></canvas>
        <canvas id='canvasinput1-144'class='display_none'></canvas>
        <canvas id='canvasinput1-145'class='display_none'></canvas>
        <canvas id='canvasinput1-146'class='display_none'></canvas>
        <canvas id='canvasinput1-147'class='display_none'></canvas>
        <canvas id='canvasinput1-148'class='display_none'></canvas>
        <canvas id='canvasinput1-149'class='display_none'></canvas>
        <canvas id='canvasinput1-150'class='display_none'></canvas>
        <canvas id='canvasinput1-151'class='display_none'></canvas>
        <canvas id='canvasinput1-152'class='display_none'></canvas>
        <canvas id='canvasinput1-153'class='display_none'></canvas>
        <canvas id='canvasinput1-154'class='display_none'></canvas>
        <canvas id='canvasinput1-155'class='display_none'></canvas>
        <canvas id='canvasinput1-156'class='display_none'></canvas>
        <canvas id='canvasinput1-157'class='display_none'></canvas>
        <canvas id='canvasinput1-158'class='display_none'></canvas>
        <canvas id='canvasinput1-159'class='display_none'></canvas>
        <canvas id='canvasinput1-160'class='display_none'></canvas>
        <canvas id='canvasinput1-161'class='display_none'></canvas>
        <canvas id='canvasinput1-162'class='display_none'></canvas>
        <canvas id='canvasinput1-163'class='display_none'></canvas>
        <canvas id='canvasinput1-164'class='display_none'></canvas>
        <canvas id='canvasinput1-165'class='display_none'></canvas>
        <canvas id='canvasinput1-166'class='display_none'></canvas>
        <canvas id='canvasinput1-167'class='display_none'></canvas>
        <canvas id='canvasinput1-168'class='display_none'></canvas>
        <canvas id='canvasinput1-169'class='display_none'></canvas>
        <canvas id='canvasinput1-170'class='display_none'></canvas>
        <canvas id='canvasinput1-171'class='display_none'></canvas>
        <canvas id='canvasinput1-172'class='display_none'></canvas>
        <canvas id='canvasinput1-173'class='display_none'></canvas>
        <canvas id='canvasinput1-174'class='display_none'></canvas>
        <canvas id='canvasinput1-175'class='display_none'></canvas>
        <canvas id='canvasinput1-176'class='display_none'></canvas>
        <canvas id='canvasinput1-177'class='display_none'></canvas>
        <canvas id='canvasinput1-178'class='display_none'></canvas>
        <canvas id='canvasinput1-179'class='display_none'></canvas>
        <canvas id='canvasinput1-180'class='display_none'></canvas>


        <canvas id='canvasinput1-181'class='display_none'></canvas>
        <canvas id='canvasinput1-182'class='display_none'></canvas>
        <canvas id='canvasinput1-183'class='display_none'></canvas>
        <canvas id='canvasinput1-184'class='display_none'></canvas>
        <canvas id='canvasinput1-185'class='display_none'></canvas>
        <canvas id='canvasinput1-186'class='display_none'></canvas>
        <canvas id='canvasinput1-187'class='display_none'></canvas>
        <canvas id='canvasinput1-188'class='display_none'></canvas>
        <canvas id='canvasinput1-189'class='display_none'></canvas>
        <canvas id='canvasinput1-190'class='display_none'></canvas>
        <canvas id='canvasinput1-191'class='display_none'></canvas>
        <canvas id='canvasinput1-192'class='display_none'></canvas>
        <canvas id='canvasinput1-193'class='display_none'></canvas>
        <canvas id='canvasinput1-194'class='display_none'></canvas>
        <canvas id='canvasinput1-195'class='display_none'></canvas>
        <canvas id='canvasinput1-196'class='display_none'></canvas>
        <canvas id='canvasinput1-197'class='display_none'></canvas>
        <canvas id='canvasinput1-198'class='display_none'></canvas>
        <canvas id='canvasinput1-199'class='display_none'></canvas>
        <canvas id='canvasinput1-200'class='display_none'></canvas>
        <canvas id='canvasinput1-201'class='display_none'></canvas>
        <canvas id='canvasinput1-202'class='display_none'></canvas>
        <canvas id='canvasinput1-203'class='display_none'></canvas>
        <canvas id='canvasinput1-204'class='display_none'></canvas>
        <canvas id='canvasinput1-205'class='display_none'></canvas>
        <canvas id='canvasinput1-206'class='display_none'></canvas>
        <canvas id='canvasinput1-207'class='display_none'></canvas>
        <canvas id='canvasinput1-208'class='display_none'></canvas>
        <canvas id='canvasinput1-209'class='display_none'></canvas>
        <canvas id='canvasinput1-210'class='display_none'></canvas>
        <canvas id='canvasinput1-211'class='display_none'></canvas>
        <canvas id='canvasinput1-212'class='display_none'></canvas>
        <canvas id='canvasinput1-213'class='display_none'></canvas>
        <canvas id='canvasinput1-214'class='display_none'></canvas>
        <canvas id='canvasinput1-215'class='display_none'></canvas>
        <canvas id='canvasinput1-216'class='display_none'></canvas>
        <canvas id='canvasinput1-217'class='display_none'></canvas>
        <canvas id='canvasinput1-218'class='display_none'></canvas>
        <canvas id='canvasinput1-219'class='display_none'></canvas>
        <canvas id='canvasinput1-220'class='display_none'></canvas>
        <canvas id='canvasinput1-221'class='display_none'></canvas>
        <canvas id='canvasinput1-222'class='display_none'></canvas>
        <canvas id='canvasinput1-223'class='display_none'></canvas>
        <canvas id='canvasinput1-224'class='display_none'></canvas>
        <canvas id='canvasinput1-225'class='display_none'></canvas>
        <canvas id='canvasinput1-226'class='display_none'></canvas>
        <canvas id='canvasinput1-227'class='display_none'></canvas>
        <canvas id='canvasinput1-228'class='display_none'></canvas>
        <canvas id='canvasinput1-229'class='display_none'></canvas>
        <canvas id='canvasinput1-230'class='display_none'></canvas>
        <canvas id='canvasinput1-231'class='display_none'></canvas>
        <canvas id='canvasinput1-232'class='display_none'></canvas>
        <canvas id='canvasinput1-233'class='display_none'></canvas>
        <canvas id='canvasinput1-234'class='display_none'></canvas>
        <canvas id='canvasinput1-235'class='display_none'></canvas>
        <canvas id='canvasinput1-236'class='display_none'></canvas>
        <canvas id='canvasinput1-237'class='display_none'></canvas>
        <canvas id='canvasinput1-238'class='display_none'></canvas>
        <canvas id='canvasinput1-239'class='display_none'></canvas>
        <canvas id='canvasinput1-240'class='display_none'></canvas>
    </div>

    <div class='inputoutput'>
        <div class='caption'>canvasOutput</div>
        <canvas id='canvasOutput'></canvas>
        <canvas id='canvasOutput2'></canvas>
        <canvas id='canvasOutput3'></canvas>
        <canvas id='canvasOutput4'></canvas>
        <canvas id='canvasOutput5'></canvas>
        <canvas id='canvasOutput6'></canvas>
        <canvas id='canvasOutput7'></canvas>
        <canvas id='canvasOutput8'></canvas>
    </div>

    <div id='video_between_transition_startendArea'>

    </div>

</div>
<script>
//ffmpeg intialize
const {createFFmpeg,fetchFile} = FFmpeg;
let ffmpeg=null;
let inputElement=document.getElementById('fileInput');
let video=document.getElementById('video');

let test_extract=document.getElementById('test_extract');

let canvasinput1=document.getElementById('canvasinput1');
let canvasinput2=document.getElementById('canvasinput2');
let context1=canvasinput1.getContext('2d');

let canvasoutput1=document.getElementById('canvasOutput');
let canvasoutput2=document.getElementById('canvasOutput2');
let canvasoutput3=document.getElementById('canvasOutput3');
let canvasoutput4=document.getElementById('canvasOutput4');
let canvasoutput5=document.getElementById('canvasOutput5');
let canvasoutput6=document.getElementById('canvasOutput6');
let canvasoutput7=document.getElementById('canvasOutput7');
let canvasoutput8=document.getElementById('canvasOutput8');

let output_video_element= document.getElementById('output_video_element');

let firstimage=document.getElementById('firstimage');
let secondimage=document.getElementById('secondimage');

let src;
let dst;
let cap;

let test=document.getElementById('test');

function init_cv(){
    
    //src=new cv.Mat(video.height,video.width,cv.CV_8UC4);
   // dst=new cv.Mat(video.height,video.width,cv.CV_8UC1);
   // cap=new cv.VideoCapture(video);

    //addweighted...>>
   //let alpha=0.5;let beta; 

    /*let blend_dst=new cv.Mat();
    let src1=new cv.Mat(); let src2=new cv.Mat();
    src1=cv.imread(firstimage);
    src2=cv.imread(secondimage);
    console.log('src1:',src1);
    console.log('src2:',src2);
    beta=1 - alpha;
    cv.addWeighted(src1,alpha,src2,beta,0.0,blend_dst,-1);
    cv.imshow(canvasinput2, blend_dst);*/

    let src00 = new cv.Mat();
    src00 = cv.imread(test);
    console.log('src00:',src00);

    let src01 = new cv.Mat();
    src01 = cv.imread(test2);
    console.log('src01:',src01);
}
//트랜지션효과 적용함수
function image_write_front(upload_count,upload_list){
    
    //let transfer_files_server=[];//결국은 처리된 이미지를 한번 서버에 저장하는 처리가 필요함.클라이언트에 저장하는 과정이나 방법론시에 이슈사항이 꽤 많음.서버에 저장된 이미지를 다 처리후에 결과값이 도달시에 그 이미지들에 대해서 가져와서 ffmpegaws.js로 그들끼리 영상으로 만든다. 그 만든파일과 원본파일들끼리 합치는연산.
    /*let between_image_start1_g=document.getElementById(`between_1_start`);
    let between_image_end1_g = document.getElementById("between_1_end");
    let between_image_start2_g=document.getElementById(`between_2_start`);
    let between_image_end2_g = document.getElementById("between_2_end");
    let between_image_start3_g=document.getElementById(`between_3_start`);
    let between_image_end3_g = document.getElementById("between_3_end");
    let between_image_start4_g=document.getElementById(`between_4_start`);
    let between_image_end4_g = document.getElementById("between_4_end");

    let between1_start=new cv.Mat();
    let between1_end=new cv.Mat();
    let between2_start=new cv.Mat();
    let between2_end=new cv.Mat();
    let between3_start=new cv.Mat();
    let between3_end=new cv.Mat();
    let between4_start=new cv.Mat();
    let between4_end=new cv.Mat();

    between1_start = cv.imread(between_image_start1_g);
    between1_end = cv.imread(between_image_end1_g);
    between2_start = cv.imread(between_image_start2_g);
    between2_end = cv.imread(between_image_end2_g);
    between3_start = cv.imread(between_image_start3_g);
    between3_end = cv.imread(between_image_end3_g);
    between4_start = cv.imread(between_image_start4_g);
    between4_end = cv.imread(between_image_end4_g);*/

    let video_between_transition_startendArea=document.getElementById('video_between_transition_startendArea');
    let between_count=parseInt(video_between_transition_startendArea.children.length / 2);

    //let newform=document.createElement('form');
    //newform.name='newform';
    ////newform.method='post';
    //newform.action='/upload_ver_another';
    //newform.target='_blank';

    //var input=document.createElement('input');
    //input.setAttribute('type','hidden');
    //input.setAttribute('name','upload_count');
    //input.setAttribute('value',upload_count);
    //newform.appendChild(input);
    var formdata=new FormData();

    formdata.append('upload_count',upload_count);
    formdata.append('upload_list',upload_list);

    for(let between=0; between<between_count; between++){
        let between_image_start=document.getElementById(`between_${between+1}_start`);
        let between_image_end = document.getElementById(`between_${between+1}_end`);
        
        /*switch((between+1)){
            case 1:
                between_image_start = between_image_start1_g;
                between_image_end = between_image_end1_g;
            break;
            case 2:
                between_image_start = between_image_start2_g;
                between_image_end = between_image_end2_g;
            break;
            case 3:
                between_image_start = between_image_start3_g;
                between_image_end = between_image_end3_g;
            break;
            case 4:
                between_image_start = between_image_start4_g;
                between_image_end = between_image_end4_g;
            break;
        }*/

        let alpha=1;let beta; 

        console.log('관련 타깃대상요소 별 전환>:',between_image_start,between_image_end);
        let between_start_s=cv.imread(between_image_start);
        let between_end_s=cv.imread(between_image_end);
        console.log('====>>각 사이장면between별 read값::',between_start_s,between_end_s);

        for(let tran=0; tran<26; tran++){
            //장면별전환시에 26장 이미지를 초당 26개씩보여주는 26fps로 일단 처리>>
            let blend_dst = new cv.Mat();
            let src1 = new cv.Mat(); let src2= new cv.Mat();

            //transition관련 처리 starts...OPENCV.js
            console.log('->>>각 장면 변환별 참조 이미지start~end:',between_image_start,between_image_end);
            src1 = cv.imread(between_image_start);
            src2 = cv.imread(between_image_end);
            console.log('src1:',src1);
            console.log('src2:',src2);
            alpha -= (1/26); beta=1 - alpha;
            alpha = parseFloat(alpha.toFixed(2));
            beta = parseFloat(beta.toFixed(2));
            alpha = alpha <=0?0:alpha;
            beta = beta>=1?1:beta;
            console.log('alpha and betass:',alpha,beta);

            cv.addWeighted(src1,alpha,src2,beta,0.0,blend_dst,-1);
            console.log('뭔데 도대체 blender_dst:',blend_dst);
            let target_element=document.getElementById('canvasinput1-'+((26*(between))+(tran+1)));

            console.log('targetelemtensss:',target_element);
            cv.imshow(target_element, blend_dst);
            //transition관련 처리 ends...

            let data_url = target_element.toDataURL();//image urlsss
            console.log('get data urlsss:',data_url);

            let bstr= atob(data_url.split(",")[1]);
            let n = bstr.length;
            let u8arr = new Uint8Array(n);

            while(n--){
                u8arr[n] = bstr.charCodeAt(n);
            }
            var file=new File([u8arr],`blend_transitionImg_between${between+1}_${(tran+1)}.png`);

            console.log('filesss:',file);
            formdata.append(`between${between+1}_${tran+1}`,file);//file개체 betwen1_1,2,3,4,5,.... between2_1,2,3,4,.... 이런식으로 한다. upload_count 4이면 사이공간between3까지 있을것임..
            //let input_loca=document.createElement('input');
            //input_loca.setAttribute('type','hidden');
            //input_loca.setAttribute('name',);
            //input_loca.setAttribute('value',)
            src1.delete();src2.delete();blend_dst.delete();
        }
    }
    /*for(let j=0; j<60; j++){
        let blend_dst=new cv.Mat();
        let src1=new cv.Mat(); let src2=new cv.Mat();
    
        src1=cv.imread(firstimage);
        src2=cv.imread(secondimage);
        console.log('src1:',src1);
        console.log('src2:',src2);
        alpha -= (1/60); beta=1 - alpha;   
        alpha = parseFloat(alpha.toFixed(2));
        beta = parseFloat(beta.toFixed(2));
        alpha = alpha<=0?0:alpha;
        beta = beta>=1?1:beta;
        console.log('alpha and beta:',alpha,beta);
        
        cv.addWeighted(src1,alpha,src2,beta,0.0,blend_dst,-1);
        //cv.imwrite(`../tmp/transition_betweenfade-${j+1}.jpg`,blend_dst);
        let target_element=document.getElementById('canvasinput1-'+(j+1));

        console.log('targetelemetns:',target_element);
        cv.imshow(target_element,blend_dst);
        let data_url=target_element.toDataURL();//images urlsss
        console.log('get data_urlss:',data_url);
        //src1.delete();src2.delete();blend_dst.delete();

        let bstr=atob(data_url.split(",")[1]);
        let n=bstr.length;
        let u8arr= new Uint8Array(n);

        while(n--){
            u8arr[n]=bstr.charCodeAt(n);
        }
        var file=new File([u8arr],`transition_test${j+1}.png`);

        console.log('filess:',file);
        //saveAs(file);
        //transfer_files_server.push(file);
        formdata.append(`file${j+1}`,file);
    }*/

    $.ajax({
        url:'/upload_ver',
        //url:'/upload_ver_another',
        processData:false,
        contentType:false,
        data:formdata,
        type:"POST",
        success:function(result){
            console.log('upload process resultsss:',result);
            alert('처리완료>>>>');
            //serverfile_process(result);    
            
            output_video_element.src='http://localhost:3001/processfiles/'+result.video_result;
            output_video_element.load();
        },
        error:function(err){
            console.log('error:',err);
        }
    });
    /*let xhr = new XMLHttpRequest();

    xhr.onload=(result)=>{
        if(xhr.status === 500 && result && result.code === 'ECONNRESET'){
            console.log("concneicto was resetss henrece retry the sendRequest function");
        }else if(xhr.status===200){

        }else{
            console.log('Error while retrieinve gdatas');
        }
    }
    xhr.onerror = (e) => {
        console.log('there was an error while reteirv data from serivcie',e);
    };

    xhr.open('POST','/upload_ver_another');
    //xhr.setRequestHeader("Content-Type",'multipart/form-data');
    xhr.send(formdata);*/

}


function video_upload(e){
    console.log('비디오업로드폼 데이터 제출:');
    e.preventDefault();
    let video_uploadform = document.getElementById('video_uploadform');
    let form_data= new FormData(video_uploadform);
    $.ajax({
        url:'/upload_ver2',
        type:'post',
        data: form_data,
        cache:false,
        contentType:false,
        processData:false,
        error:function(jqxHR,textStatus,errorThrown){

        },
        beforeSend:function(){

        },
        complete:function(){

        },
        success:function(data){
            console.log('result datatsss:',data);
            
            let image_extract_form_inputdata=document.getElementById('image_extract_form_data');
            image_extract_form_inputdata.value=data.join(',');//문자열저장화
            for(let r=0; r<data.length; r++){
                let target_video = document.getElementById('upload_video'+r);
                target_video.src=data[r];
                target_video.load();
            }
        }
    });
    return false;
}
function onOpenCvReady(){
    console.log('filesaverss saveAs:',saveAs);
    document.getElementById('status').innerHTML ='OPENCV,.JS IS REaday';
    document.getElementById('start').addEventListener('click',init_cv,false);

    let rel_target_gathering={};//n개 올린 비디오의 각 between start,endpos 관련 이미지 한개씩 쌍정보 개체들 수집하는 관련된 대기저장

    test_extract.addEventListener('click',function(){
        video_between_transition_startendArea.innerHTML='';
        //document.getElementById('testform').submit();
        console.log('whatssss:');

        let image_extract_form_data = document.getElementById('image_extract_form_data');
        let transfer_data={
            'upload_list_data':image_extract_form_data.value
        }
        console.log('transfer datasss:',transfer_data);
        //var formdata=new FormData(document.getElementById('uploadform'));
        $.ajax({
            url:'/testsss',
            type:'post',
            data:transfer_data,
            cache:false,
            //contentType:false,
            //processData:false,
            error:function(jqxHR,textStatus,errorThrown){

            },
            beforeSend: function(){
                //console.log('ajax startssss:');
                //$('#loading-progress')[0].style.display='flex';
            },
            complete: function(){
               // $('#loading-progress').hide();
            },
            success:function(result_data){
                console.log('result datasss;',result_data);
                
                //upload_listss>>
                let upload_list = result_data.upload_list;

                //video_between_transition_startendArea
                let video_between_transition_startendArea = document.getElementById('video_between_transition_startendArea');
                let loop_count = result_data.upload_count;

                for(let l=0; l<loop_count; l++){
                    //0:0,1  1:1,2  2:2,3  3:3,4 
                    let now_video_endpoint = result_data.data[(l+1)+'_end_data'];
                    let next_video_startpoint= result_data.data[(l+1+1)+'_start_data'];//첫비디오,n번쨰 비디오가 있을때 다음대상 비디오가 있으면 다음비디오의 첫부분과 지금비디오의 마지막부분의 트랜지션 효과를 부여할뿐임>>
                    console.log('video between image transitions standy loopss:',now_video_endpoint,next_video_startpoint);
                    if(next_video_startpoint){
                        //지금 현재 비디오의 마지막장면이미지(한개)
                        let make_image_current=document.createElement('IMG');
                        make_image_current.width=1280; make_image_current.height=720; 
                        make_image_current.src= now_video_endpoint[0];
                        make_image_current.setAttribute('id',`between_${l+1}_start`);//n번째 사이공간의 시작
                        //다음 비디오의 첫번째 장면이미지(한개)
                        let make_image_next = document.createElement('IMG');
                        make_image_next.width=1280; make_image_next.height=720;
                        make_image_next.src= next_video_startpoint[0];
                        make_image_next.setAttribute('id',`between_${l+1}_end`);//n번쨰 사이공간의 끝

                        video_between_transition_startendArea.appendChild(make_image_current);
                        video_between_transition_startendArea.appendChild(make_image_next);

                        make_image_current.onload=function(e){
                            console.log('create elemtn image first개체 다 로드시점실행>>:',e.target);
                            rel_target_gathering[`${l+1}_start`] = true;
                        }
                        make_image_next.onload=function(e){
                            console.log('crate elemnt image after개체 다 로드시점실행>>:',e.target);
                            rel_target_gathering[`${l+1}_end`] = true;
                        }
                    }
                }

                let standby = window.setInterval(function(){
                    console.log('===>>관련 이미지대상between들 모두 로드된시점에 실행>>>:',standby, rel_target_gathering);
                    let pass=false;
                    for(let t=0; t<loop_count-1; t++){
                        //3 : 0,1,2 
                        if(rel_target_gathering[`${t+1}_start`] && rel_target_gathering[`${t+1}_end`]){
                            //t:1 2 3 4 5  세개 업로드했다면 그 개수-1 개만큼의 사이공간이 있다는것이고 1,2 between 5개했다면 0~4 0,1,2,3=>1,2,3,4 네개between있어야만 비트윈들에 조건 개수가들이 모두 존재해야만 통과이다 통과안하면 계속 도는것이고 통과되는순간 interval멈춘다 관련사이between대상 object개체이며, 이 원소리스트 집합중 존재했던 경우라면 pass=true
                            pass=true;
                        }else{
                            pass=false;//존재하지 않았던 한 케이스라도 존재하지 않았던 경우라면 
                        }
                    }
                    console.log('===>>데이터 gathering full여부:',pass,rel_target_gathering);
                    if(pass){
                        window.clearInterval(standby);
                        //반복호출실행을 멈추고, image_write_front실행>>
                        image_write_front(loop_count,upload_list);
                    }
                },20);
                /*document.getElementById('firstimage').width=1280;
                document.getElementById('firstimage').height=720;
                document.getElementById('secondimage').width=1280;
                document.getElementById('secondimage').height=720;
                document.getElementById('firstimage').src=data['1_data'][1];
                document.getElementById('secondimage').src=data['2_data'][0];

                //let url=URL.createObjectURL(data);
                //console.log('urlsss read 가능??:',url);
                //http://localhost:3000/processfiles/xxxxxxxxresultfile.mp4

                firstimage.onload=function(e){
                    console.log('파일이 다 로드된시점에 실행:::',e.target);
                    rel_target_gathering['1']=true;
                }
                secondimage.onload=function(e){
                    console.log('파일이 다 로드된시점에 실행:::',e.target);
                    rel_target_gathering['2']=true;
                }

                let standby = window.setInterval(function(){
                    console.log('===>이미지파일로드 src다 둘다 지정된경우에 실행>>>:',standby,rel_target_gathering);
                    if(rel_target_gathering['1'] && rel_target_gathering['2']){
                        window.clearInterval(standby);
                        //let src1=cv.imread(firstimage);
                        //let src2=cv.imread(secondimage);
                        //console.log('src1:',src1);
                        //console.log('src2:',src2);

                        image_write_front();
                    }
                },10);*/
                
                //video_source_element.src='http://localhost:3000/processfiles/'+data.video_result;
                //video_element.load();
            }
        });    
    },false);
}


</script>
<script async src='public/opencv.js' onload='onOpenCvReady()'></script>
</body>
</html>