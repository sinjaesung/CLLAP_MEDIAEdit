<html>
<head>
<script src='/public/ffmpegwasm.js'></script>
<style>
    html,body{
        margin:0; width:100%;height:100%
    }
    body{
        display:flex;flex-direction:column; align-items:center;
    }
</style>
</head>
<body>
    <h3>select mutlipoe video files to concatnate</h3>
    <video id='output-video' controls></video><br/>
    <input type="file" id="uploader" multiple />
    <p id="message"></p>
    <script>
        const {createFFmpeg,fetchFile} = FFmpeg;
        const  ffmpeg=createFFmpeg({log:true});

        const transcode=async({target:{files}})=>{
            console.log('transacod efile changess filess>>:',files);
            const message=document.getElementById('message');
            message.innerHTML='Loading ffmpegt-core.js';
            await ffmpeg.load();
            message.innerHTML="Start concating";
            const inputPaths=[];
            for(const file of files){
                const {name} = file;
                ffmpeg.FS('writeFile',name,await fetchFile(file));
                inputPaths.push(`file ${name}`);
            }
            ffmpeg.FS('writeFile','concat_list.txt',inputPaths.join('\n'));
            await ffmpeg.run('-f','concat','-i','concat_list.txt','-c','copy','output.mp4');
          
           //await ffmpeg.run('-i','resource_simple.mp4','-i','resource2_simple.mp4','-filter_complex','"[0:v][0:a][1:v][1:a] concat=n=2:v=1:a=1 [outv] [outa]"','-map','"[outv]"','-map','"[outa]"','outputddffff.mp4');
          
            message.innerHTML='Complete Concating';
            const data=ffmpeg.FS('readFile','output.mp4');
            const video =document.getElementById('output-video');
            video.src= URL.createObjectURL(
                new Blob([data.buffer],{
                    type:'video/mp4'
                })
            );


        };
        const elm=document.getElementById('uploader');
        elm.addEventListener('change',transcode);
    </script>
</body>